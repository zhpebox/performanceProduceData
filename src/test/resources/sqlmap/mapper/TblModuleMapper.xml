<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.performance.dao.TblModuleMapper" >
  <resultMap id="BaseResultMap" type="com.performance.model.TblModule" >
    <id column="module_id" property="moduleId" jdbcType="INTEGER" />
    <result column="file_name" property="fileName" jdbcType="VARCHAR" />
    <result column="file_header" property="fileHeader" jdbcType="VARCHAR" />
    <result column="module_name" property="moduleName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.performance.model.TblModule" extends="BaseResultMap" >
    <result column="module_text" property="moduleText" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    module_id, file_name, file_header, module_name
  </sql>
  <sql id="Blob_Column_List" >
    module_text
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.performance.model.TblModuleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_module
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.performance.model.TblModuleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_module
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_module
    where module_id = #{moduleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_module
    where module_id = #{moduleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.performance.model.TblModuleExample" >
    delete from t_module
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.performance.model.TblModule" >
    <selectKey resultType="java.lang.Integer" keyProperty="moduleId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_module (file_name, file_header, module_name, 
      module_text)
    values (#{fileName,jdbcType=VARCHAR}, #{fileHeader,jdbcType=VARCHAR}, #{moduleName,jdbcType=VARCHAR}, 
      #{moduleText,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.performance.model.TblModule" >
    <selectKey resultType="java.lang.Integer" keyProperty="moduleId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_module
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fileName != null" >
        file_name,
      </if>
      <if test="fileHeader != null" >
        file_header,
      </if>
      <if test="moduleName != null" >
        module_name,
      </if>
      <if test="moduleText != null" >
        module_text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileHeader != null" >
        #{fileHeader,jdbcType=VARCHAR},
      </if>
      <if test="moduleName != null" >
        #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="moduleText != null" >
        #{moduleText,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.performance.model.TblModuleExample" resultType="java.lang.Integer" >
    select count(*) from t_module
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_module
    <set >
      <if test="record.moduleId != null" >
        module_id = #{record.moduleId,jdbcType=INTEGER},
      </if>
      <if test="record.fileName != null" >
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileHeader != null" >
        file_header = #{record.fileHeader,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleName != null" >
        module_name = #{record.moduleName,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleText != null" >
        module_text = #{record.moduleText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_module
    set module_id = #{record.moduleId,jdbcType=INTEGER},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      file_header = #{record.fileHeader,jdbcType=VARCHAR},
      module_name = #{record.moduleName,jdbcType=VARCHAR},
      module_text = #{record.moduleText,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_module
    set module_id = #{record.moduleId,jdbcType=INTEGER},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      file_header = #{record.fileHeader,jdbcType=VARCHAR},
      module_name = #{record.moduleName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.performance.model.TblModule" >
    update t_module
    <set >
      <if test="fileName != null" >
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileHeader != null" >
        file_header = #{fileHeader,jdbcType=VARCHAR},
      </if>
      <if test="moduleName != null" >
        module_name = #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="moduleText != null" >
        module_text = #{moduleText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where module_id = #{moduleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.performance.model.TblModule" >
    update t_module
    set file_name = #{fileName,jdbcType=VARCHAR},
      file_header = #{fileHeader,jdbcType=VARCHAR},
      module_name = #{moduleName,jdbcType=VARCHAR},
      module_text = #{moduleText,jdbcType=LONGVARCHAR}
    where module_id = #{moduleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.performance.model.TblModule" >
    update t_module
    set file_name = #{fileName,jdbcType=VARCHAR},
      file_header = #{fileHeader,jdbcType=VARCHAR},
      module_name = #{moduleName,jdbcType=VARCHAR}
    where module_id = #{moduleId,jdbcType=INTEGER}
  </update>
</mapper>