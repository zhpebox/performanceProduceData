<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.performance.dao.TblGeneratorMapper" >
  <resultMap id="BaseResultMap" type="com.performance.model.TblGenerator" >
    <id column="gid" property="gid" jdbcType="INTEGER" />
    <result column="moduleId" property="moduleid" jdbcType="INTEGER" />
    <result column="moduleName" property="modulename" jdbcType="VARCHAR" />
    <result column="startOrg" property="startorg" jdbcType="INTEGER" />
    <result column="endOrg" property="endorg" jdbcType="INTEGER" />
    <result column="fileNum" property="filenum" jdbcType="INTEGER" />
    <result column="fileSize" property="filesize" jdbcType="INTEGER" />
    <result column="fileBasePath" property="filebasepath" jdbcType="VARCHAR" />
    <result column="updateTime" property="updatetime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    gid, moduleId, moduleName, startOrg, endOrg, fileNum, fileSize, fileBasePath, updateTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.performance.model.TblGeneratorExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_generator
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_generator
    where gid = #{gid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_generator
    where gid = #{gid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.performance.model.TblGeneratorExample" >
    delete from t_generator
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.performance.model.TblGenerator" >
    <selectKey resultType="java.lang.Integer" keyProperty="gid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_generator (moduleId, moduleName, startOrg, 
      endOrg, fileNum, fileSize, 
      fileBasePath, updateTime)
    values (#{moduleid,jdbcType=INTEGER}, #{modulename,jdbcType=VARCHAR}, #{startorg,jdbcType=INTEGER}, 
      #{endorg,jdbcType=INTEGER}, #{filenum,jdbcType=INTEGER}, #{filesize,jdbcType=INTEGER}, 
      #{filebasepath,jdbcType=VARCHAR}, #{updatetime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.performance.model.TblGenerator" >
    <selectKey resultType="java.lang.Integer" keyProperty="gid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_generator
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="moduleid != null" >
        moduleId,
      </if>
      <if test="modulename != null" >
        moduleName,
      </if>
      <if test="startorg != null" >
        startOrg,
      </if>
      <if test="endorg != null" >
        endOrg,
      </if>
      <if test="filenum != null" >
        fileNum,
      </if>
      <if test="filesize != null" >
        fileSize,
      </if>
      <if test="filebasepath != null" >
        fileBasePath,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="moduleid != null" >
        #{moduleid,jdbcType=INTEGER},
      </if>
      <if test="modulename != null" >
        #{modulename,jdbcType=VARCHAR},
      </if>
      <if test="startorg != null" >
        #{startorg,jdbcType=INTEGER},
      </if>
      <if test="endorg != null" >
        #{endorg,jdbcType=INTEGER},
      </if>
      <if test="filenum != null" >
        #{filenum,jdbcType=INTEGER},
      </if>
      <if test="filesize != null" >
        #{filesize,jdbcType=INTEGER},
      </if>
      <if test="filebasepath != null" >
        #{filebasepath,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.performance.model.TblGeneratorExample" resultType="java.lang.Integer" >
    select count(*) from t_generator
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_generator
    <set >
      <if test="record.gid != null" >
        gid = #{record.gid,jdbcType=INTEGER},
      </if>
      <if test="record.moduleid != null" >
        moduleId = #{record.moduleid,jdbcType=INTEGER},
      </if>
      <if test="record.modulename != null" >
        moduleName = #{record.modulename,jdbcType=VARCHAR},
      </if>
      <if test="record.startorg != null" >
        startOrg = #{record.startorg,jdbcType=INTEGER},
      </if>
      <if test="record.endorg != null" >
        endOrg = #{record.endorg,jdbcType=INTEGER},
      </if>
      <if test="record.filenum != null" >
        fileNum = #{record.filenum,jdbcType=INTEGER},
      </if>
      <if test="record.filesize != null" >
        fileSize = #{record.filesize,jdbcType=INTEGER},
      </if>
      <if test="record.filebasepath != null" >
        fileBasePath = #{record.filebasepath,jdbcType=VARCHAR},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_generator
    set gid = #{record.gid,jdbcType=INTEGER},
      moduleId = #{record.moduleid,jdbcType=INTEGER},
      moduleName = #{record.modulename,jdbcType=VARCHAR},
      startOrg = #{record.startorg,jdbcType=INTEGER},
      endOrg = #{record.endorg,jdbcType=INTEGER},
      fileNum = #{record.filenum,jdbcType=INTEGER},
      fileSize = #{record.filesize,jdbcType=INTEGER},
      fileBasePath = #{record.filebasepath,jdbcType=VARCHAR},
      updateTime = #{record.updatetime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.performance.model.TblGenerator" >
    update t_generator
    <set >
      <if test="moduleid != null" >
        moduleId = #{moduleid,jdbcType=INTEGER},
      </if>
      <if test="modulename != null" >
        moduleName = #{modulename,jdbcType=VARCHAR},
      </if>
      <if test="startorg != null" >
        startOrg = #{startorg,jdbcType=INTEGER},
      </if>
      <if test="endorg != null" >
        endOrg = #{endorg,jdbcType=INTEGER},
      </if>
      <if test="filenum != null" >
        fileNum = #{filenum,jdbcType=INTEGER},
      </if>
      <if test="filesize != null" >
        fileSize = #{filesize,jdbcType=INTEGER},
      </if>
      <if test="filebasepath != null" >
        fileBasePath = #{filebasepath,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=VARCHAR},
      </if>
    </set>
    where gid = #{gid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.performance.model.TblGenerator" >
    update t_generator
    set moduleId = #{moduleid,jdbcType=INTEGER},
      moduleName = #{modulename,jdbcType=VARCHAR},
      startOrg = #{startorg,jdbcType=INTEGER},
      endOrg = #{endorg,jdbcType=INTEGER},
      fileNum = #{filenum,jdbcType=INTEGER},
      fileSize = #{filesize,jdbcType=INTEGER},
      fileBasePath = #{filebasepath,jdbcType=VARCHAR},
      updateTime = #{updatetime,jdbcType=VARCHAR}
    where gid = #{gid,jdbcType=INTEGER}
  </update>
</mapper>